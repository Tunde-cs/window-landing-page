# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: windowgeniusai

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image tag and uri
        run: |
          set -euo pipefail
          IMAGE_TAG=${GITHUB_SHA}
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
          echo "IMAGE_URI=$IMAGE_URI" >> "$GITHUB_ENV"
          echo "Will push $IMAGE_URI"


      - name: Build & push image to ECR
        run: |
          set -euo pipefail
          docker buildx build \
            --platform linux/amd64 \
            --progress=plain --pull \
            -t "$IMAGE_URI" \
            --push \
            .

      - name: Set up Node (for CDK)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Set up Python (for CDK app)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r cdk-windowgeniusai/requirements.txt

      - name: CDK synth (optional)
        run: cdk synth --app "python3 cdk-windowgeniusai/app.py" -c imageTag="$IMAGE_TAG"

      - name: CDK deploy
        run: |
          set -euo pipefail
          cdk deploy \
            --require-approval never \
            --app "python3 cdk-windowgeniusai/app.py" \
            -c imageTag="$IMAGE_TAG"
