# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "${{ secrets.AWS_REGION }}"
      ECR_REPOSITORY: "${{ secrets.ECR_REPOSITORY }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "${{ secrets.AWS_REGION }}"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image tag (commit SHA)
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> "$GITHUB_ENV"

      - name: Build, tag, and push image
        run: |
          docker buildx build --platform linux/amd64 -t "$ECR_REPOSITORY:$IMAGE_TAG" .
          docker tag "$ECR_REPOSITORY:$IMAGE_TAG" "${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG"
          docker push "${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Set up Node (for CDK)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Set up Python (for CDK app)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r cdk-windowgeniusai/requirements.txt

      - name: CDK synth (optional)
        run: cdk synth --app "python3 cdk-windowgeniusai/app.py"

      - name: CDK deploy
        run: >
          cdk deploy --require-approval never
          --app "python3 cdk-windowgeniusai/app.py"
          -c imageTag=$IMAGE_TAG
